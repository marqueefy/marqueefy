{"version":3,"names":["elementMap","Map","Data","set","element","key","instance","has","instanceMap","get","size","console","error","Array","from","keys","remove","delete","isElement","object","nodeType","getElement","length","document","querySelector","normalizeData","value","Number","toString","JSON","parse","decodeURIComponent","_unused","normalizeDataKey","replace","chr","toLowerCase","Manipulator","setDataAttribute","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","mqKeys","Object","dataset","filter","startsWith","pureKey","charAt","slice","getDataAttribute","getAttribute","Default","direction","speed","DefaultType","Marqueefy","NAME","Error","_getConfig","config","this","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","jsonConfig","constructor","configTypes","property","expectedTypes","valueType","prototype","call","match","RegExp","test","TypeError","toUpperCase","super","_element","_config","DATA_KEY","dispose","propertyName","getOwnPropertyNames","static","getInstance","VERSION","refresh","distance","getBoundingClientRect","width","height","style","setProperty"],"sources":["../../js/src/helpers/data.js","../../js/src/helpers/util.js","../../js/src/helpers/manipulator.js","../../js/src/marqueefy.js","../../js/index.umd.js","../../js/src/helpers/base-component.js","../../js/src/helpers/config.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.2): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Marqueefy doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.2): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  if (isElement(object)) {\n    return object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(object)\n  }\n\n  return null\n}\n\nexport {\n  getElement,\n  isElement,\n  toType\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.2): dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-mq-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-mq-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const mqKeys = Object.keys(element.dataset).filter(key => key.startsWith('mq') && !key.startsWith('mqConfig'))\n\n    for (const key of mqKeys) {\n      let pureKey = key.replace(/^mq/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-mq-${normalizeDataKey(key)}`))\n  }\n}\n\nexport default Manipulator\n","/**\n * --------------------------------------------------------------------------\n * Marqueefy (v1.0.0): marqueefy.js\n * Licensed under MIT (https://github.com/marqueefy/marqueefy.github.io/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './helpers/base-component'\n\nconst NAME = 'marqueefy'\n\nconst Default = {\n  direction: 'left',\n  speed: 100\n}\n\nconst DefaultType = {\n  direction: 'string',\n  speed: 'number'\n}\n\nclass Marqueefy extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._element = element\n    this._config = this._getConfig(config)\n    this.refresh()\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  refresh() {\n    const { direction } = this._config\n    const { speed } = this._config\n\n    const content = this._element.querySelector('.content')\n    let distance = content.getBoundingClientRect().width\n\n    if (direction === 'top' || direction === 'bottom') {\n      distance = this._element.getBoundingClientRect().height\n      this._element.style.setProperty('--mq-height', distance + 'px')\n    }\n\n    this._element.style.setProperty('--mq-animation-duration', (distance / speed) + 's')\n  }\n}\n\nexport default Marqueefy\n","/**\n * --------------------------------------------------------------------------\n * Marqueefy (v1.0.0): index.umd.js\n * Licensed under MIT (https://github.com/marqueefy/marqueefy.github.io/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Marqueefy from './src/marqueefy'\n\nexport default { Marqueefy }\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.2): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './data'\nimport { getElement } from './util'\nimport Config from './config'\n\n/**\n * Constants\n */\n\nconst VERSION = '1.0.0'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `mq.${this.NAME}`\n  }\n}\n\nexport default BaseComponent\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.2): util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isElement, toType } from './util'\nimport Manipulator from './manipulator'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const property of Object.keys(configTypes)) {\n      const expectedTypes = configTypes[property]\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n"],"mappings":"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"}